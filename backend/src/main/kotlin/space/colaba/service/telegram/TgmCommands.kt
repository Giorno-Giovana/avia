package space.colaba.service.telegram

import com.github.kotlintelegrambot.dispatcher.Dispatcher
import com.github.kotlintelegrambot.dispatcher.command
import com.github.kotlintelegrambot.dispatcher.handlers.MessageHandlerEnvironment
import com.github.kotlintelegrambot.entities.ChatId
import com.github.kotlintelegrambot.entities.ChatId.Companion.fromId
import com.github.kotlintelegrambot.entities.InlineKeyboardMarkup
import com.github.kotlintelegrambot.entities.ParseMode.MARKDOWN
import com.github.kotlintelegrambot.entities.keyboard.InlineKeyboardButton.Url
import org.slf4j.LoggerFactory
import space.colaba.config.frontendMainPage
import java.io.File
import java.nio.file.Path
import java.nio.file.Paths

internal object TgmCommands {
    fun MessageHandlerEnvironment.chatId(): ChatId.Id = fromId(message.chat.id)

    fun Dispatcher.startCommand() {
        command("start") {
            log.info("üîë TELEGRAM: Start called")
            val startImage = "/monster-ufo.png"
            bot.sendPhoto(chatId = fromId(message.chat.id), photo = "".localFile(startImage))
            val firstName = message.from?.firstName
            bot.sendMessage(
                chatId = fromId(update.message!!.chat.id),
                text = "–î–æ–±—Ä—ã–π –¥–µ–Ω—å, $firstName ‚úåÔ∏è. " +
                        "\n–ß–µ–º –≤–∞–º –ø–æ–º–æ—á—å? –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –º–Ω–µ." +
                        "\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–π—Å–µ - –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–≥–æ –±–∏–ª–µ—Ç–∞ " +
                        "–∏–ª–∏ —Å–µ—Ä–∏—é –∏ –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞ –∏–ª–∏ –≥–æ—Ä–æ–¥ –∏ –≤—Ä–µ–º—è –≤—ã–ª–µ—Ç–∞.",
                parseMode = MARKDOWN,
                replyMarkup = InlineKeyboardMarkup.createSingleButton(
                    Url("–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –Ω–∞ —Å–∞–π—Ç–µ", "$frontendMainPage")
                )

            )
        }
    }
    private val log = LoggerFactory.getLogger(this::class.java)
    fun String.localFile(fileName: String): File = File("${pathInStaticFolder()}/$fileName")
    private fun String.pathInStaticFolder()       : Path = Paths.get("", "static", this).toAbsolutePath()

}
